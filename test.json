{
  "Comment": "Step Function to handle SageMaker Pipeline execution and notification",
  "StartAt": "CheckPipelineExistence",
  "States": {
    "CheckPipelineExistence": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.pipelineExists",
          "BooleanEquals": true,
          "Next": "ExecutePipeline"
        }
      ],
      "Default": "CreatePipeline"
    },
    "CreatePipeline": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:createPipeline",
      "Parameters": {
        "PipelineDefinition": "<YOUR_PIPELINE_DEFINITION>",
        "PipelineName": "$.pipelineName"
      },
      "Next": "ExecutePipeline"
    },
    "ExecutePipeline": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:startPipelineExecution",
      "Parameters": {
        "PipelineName": "$.pipelineName"
      },
      "Next": "MonitorPipelineExecution"
    },
    "MonitorPipelineExecution": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:describePipelineExecution",
      "Parameters": {
        "PipelineExecutionArn": "$.PipelineExecutionArn"
      },
      "End": false,
      "ResultPath": "$.executionStatus",
      "Next": "CheckExecutionStatus"
    },
    "CheckExecutionStatus": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.executionStatus.PipelineExecutionStatus",
          "StringEquals": "Succeeded",
          "Next": "NotifySuccess"
        },
        {
          "Variable": "$.executionStatus.PipelineExecutionStatus",
          "StringEquals": "Failed",
          "Next": "NotifyFailure"
        }
      ],
      "Default": "MonitorPipelineExecution"
    },
    "NotifySuccess": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "<SUCCESS_LAMBDA_ARN>",
        "Payload": {
          "status": "pass",
          "pipelineName": "$.pipelineName"
        }
      },
      "End": true
    },
    "NotifyFailure": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "<FAILURE_LAMBDA_ARN>",
        "Payload": {
          "status": "fail",
          "pipelineName": "$.pipelineName"
        }
      },
      "End": true
    }
  }
}
