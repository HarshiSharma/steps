{
  "StartAt": "CheckPipelineExists",
  "States": {
    "CheckPipelineExists": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<region>:<account-id>:function:CheckPipelineExists",
      "ResultPath": "$.pipelineExists",
      "Next": "PipelineExists?"
    },
    "PipelineExists?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.pipelineExists",
          "BooleanEquals": true,
          "Next": "ExecutePipeline"
        }
      ],
      "Default": "CreatePipeline"
    },
    "CreatePipeline": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<region>:<account-id>:function:CreatePipeline",
      "ResultPath": "$.createResult",
      "Next": "ExecutePipeline"
    },
    "ExecutePipeline": {
      "Type": "Task",
      "Resource": "arn:aws:sagemaker:<region>:<account-id>:pipeline:<pipeline-name>",
      "Parameters": {
        "PipelineExecutionConfig": {
          "PipelineName": "<pipeline-name>",
          "RoleArn": "<role-arn>"
        }
      },
      "ResultPath": "$.executionResult",
      "Next": "MonitorExecution"
    },
    "MonitorExecution": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "CheckExecutionStatus"
    },
    "CheckExecutionStatus": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<region>:<account-id>:function:CheckPipelineStatus",
      "ResultPath": "$.status",
      "Next": "ExecutionComplete?"
    },
    "ExecutionComplete?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "SUCCEEDED",
          "Next": "SendSuccessNotification"
        },
        {
          "Variable": "$.status",
          "StringEquals": "FAILED",
          "Next": "SendFailureNotification"
        }
      ],
      "Default": "MonitorExecution"
    },
    "SendSuccessNotification": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<region>:<account-id>:function:SendNotification",
      "Parameters": {
        "status": "SUCCEEDED"
      },
      "End": true
    },
    "SendFailureNotification": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<region>:<account-id>:function:SendNotification",
      "Parameters": {
        "status": "FAILED"
      },
      "End": true
    }
  }
}
