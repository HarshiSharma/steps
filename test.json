{
  "StartAt": "CheckPipelineExists",
  "States": {
    "CheckPipelineExists": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.pipelineExists",
          "BooleanEquals": true,
          "Next": "TriggerPipeline"
        }
      ],
      "Default": "CreatePipeline"
    },
    "CreatePipeline": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:createPipeline",
      "Parameters": {
        "PipelineName": "$.pipelineName",
        "PipelineDefinition": "$.pipelineDefinition"
      },
      "Next": "TriggerPipeline"
    },
    "TriggerPipeline": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:startPipelineExecution",
      "Parameters": {
        "PipelineName": "$.pipelineName"
      },
      "Next": "WaitForPipelineCompletion"
    },
    "WaitForPipelineCompletion": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "CheckPipelineStatus"
    },
    "CheckPipelineStatus": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:describePipelineExecution",
      "Parameters": {
        "PipelineExecutionArn": "$.PipelineExecutionArn"
      },
      "Next": "EvaluatePipelineStatus"
    },
    "EvaluatePipelineStatus": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "Succeeded",
          "Next": "NotifySuccessLambda"
        },
        {
          "Variable": "$.status",
          "StringEquals": "Failed",
          "Next": "NotifyFailureLambda"
        }
      ],
      "Default": "WaitForPipelineCompletion"
    },
    "NotifySuccessLambda": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<region>:<account-id>:function:<success_lambda_function>",
      "Parameters": {
        "Message": "Pipeline executed successfully"
      },
      "End": true
    },
    "NotifyFailureLambda": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<region>:<account-id>:function:<failure_lambda_function>",
      "Parameters": {
        "Message": "Pipeline execution failed"
      },
      "End": true
    }
  }
}
